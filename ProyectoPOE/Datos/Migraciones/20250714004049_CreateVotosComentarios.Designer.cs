// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoPOE.Datos;

#nullable disable

namespace ProyectoPOE.Datos.Migraciones
{
    [DbContext(typeof(ProyectoPOEContext))]
    [Migration("20250714004049_CreateVotosComentarios")]
    partial class CreateVotosComentarios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "tecnología"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "gastronomía"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "textil"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "servicios"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "artesanía"
                        });
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEmprendimiento")
                        .HasColumnType("int")
                        .HasColumnName("idEmprendimiento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mensaje");

                    b.HasKey("Id");

                    b.HasIndex("IdEmprendimiento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Comentario", (string)null);
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Emprendimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("FacultadId")
                        .HasColumnType("int")
                        .HasColumnName("facultadId");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int>("RubroId")
                        .HasColumnType("int")
                        .HasColumnName("rubroId");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.HasIndex("RubroId");

                    b.ToTable("emprendimiento", (string)null);
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("facultad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Facultad de Ciencias Matemáticas y Físicas"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Facultad de Ciencias Económicas"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Facultad de Ciencias Sociales"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Facultad de Derecho"
                        });
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_participante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cargo_funcion");

                    b.Property<byte[]>("FotoBytes")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("foto_participante");

                    b.Property<string>("NombresApellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nombres_apellidos");

                    b.HasKey("Id");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.ResultadoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoriaId");

                    b.Property<int>("EmprendimientoId")
                        .HasColumnType("int")
                        .HasColumnName("emprendimientoId");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EmprendimientoId");

                    b.ToTable("resultadoevento", (string)null);
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripción");

                    b.HasKey("Id");

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "General"
                        });
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Rubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("rubro", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "tecnología"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "gastronomía"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "textil"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "servicios"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "artesanía"
                        });
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit")
                        .HasColumnName("habilitado");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rolId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Habilitado = true,
                            Password = "YWRtaW4=",
                            RolId = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEmprendimiento")
                        .HasColumnType("int")
                        .HasColumnName("idEmprendimiento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("Id");

                    b.HasIndex("IdEmprendimiento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Voto", (string)null);
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Comentario", b =>
                {
                    b.HasOne("ProyectoPOE.Datos.Entidades.Emprendimiento", "Emprendimiento")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdEmprendimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoPOE.Datos.Entidades.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprendimiento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Emprendimiento", b =>
                {
                    b.HasOne("ProyectoPOE.Datos.Entidades.Facultad", "Facultad")
                        .WithMany("Emprendimientos")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoPOE.Datos.Entidades.Rubro", "Rubro")
                        .WithMany("Emprendimientos")
                        .HasForeignKey("RubroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");

                    b.Navigation("Rubro");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.ResultadoEvento", b =>
                {
                    b.HasOne("ProyectoPOE.Datos.Entidades.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoPOE.Datos.Entidades.Emprendimiento", "Emprendimiento")
                        .WithMany()
                        .HasForeignKey("EmprendimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Emprendimiento");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Usuario", b =>
                {
                    b.HasOne("ProyectoPOE.Datos.Entidades.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Voto", b =>
                {
                    b.HasOne("ProyectoPOE.Datos.Entidades.Emprendimiento", "Emprendimiento")
                        .WithMany("Votos")
                        .HasForeignKey("IdEmprendimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoPOE.Datos.Entidades.Usuario", "Usuario")
                        .WithMany("Votos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprendimiento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Emprendimiento", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Facultad", b =>
                {
                    b.Navigation("Emprendimientos");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Rubro", b =>
                {
                    b.Navigation("Emprendimientos");
                });

            modelBuilder.Entity("ProyectoPOE.Datos.Entidades.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Votos");
                });
#pragma warning restore 612, 618
        }
    }
}
